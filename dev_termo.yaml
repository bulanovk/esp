#Generic Block
esphome:
  name: esp-termo
  friendly_name: ESP Ectocontrol Thermostat



packages:
  external_components.modbus: !include pkg/sources/modbus_server.yaml  
  metric: !include pkg/metric.yaml
  basic: !include pkg/basic.yaml  

wifi:
  domain: ".iot.cloud-lab.xyz"
   
api:
  encryption:
    key: "mY2PuxeI7kVcAZIITrg+sOE6UOCP1TYNmWBdlmjxP94="

web_server:
  port: 80

uart:
  - id: ectobus
    tx_pin: 17
    rx_pin: 16
    baud_rate: 19600
    stop_bits: 1
    data_bits: 8
    parity: NONE
    debug:
      direction: BOTH  

  - id: chintbus
    tx_pin: 1
    rx_pin: 3
    baud_rate: 19600
    stop_bits: 1
    data_bits: 8
    parity: NONE
    debug:
      direction: BOTH          

modbus_server:
  - id: ectosrv
    uart_id: ectobus
    address: 1 # slave address
    re_pin: 4
    de_pin: 18
    input_registers:
      - start_address: 0 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0x80;    
      - start_address: 1 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0x0000;    
      - start_address: 2 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0x04;    
      - start_address: 3 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0x590A;                                  
modbus:
  id: modbus1
  uart_id: chintbus
  flow_control_pin: 22


modbus_controller:
  - id: temp_controller
    address: 0x1   ## address of the ModBUS slave device on the bus
    modbus_id: modbus1
    setup_priority: -10   
sensor:
  - platform: modbus_controller
    modbus_controller_id: temp_controller
    name: "Zone Temperature1"
    id: test1
    register_type: read
    address: 3
    unit_of_measurement: "Â°C"
    value_type: U_WORD
