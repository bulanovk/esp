#Generic Block
esphome:
  name: esp-termo
  friendly_name: ESP Ectocontrol Thermostat



packages:
  external_components.modbus: !include pkg/sources/modbus_server.yaml  
  metric: !include pkg/metric.yaml
  basic: !include pkg/basic.yaml  

wifi:
  domain: ".iot.cloud-lab.xyz"
   
api:
  encryption:
    key: "mY2PuxeI7kVcAZIITrg+sOE6UOCP1TYNmWBdlmjxP94="

web_server:
  port: 80

uart:
  - id: ectobus
    tx_pin: 17
    rx_pin: 16
    baud_rate: 19200
    stop_bits: 1
    data_bits: 8
    parity: NONE
    debug:
      direction: BOTH  

  - id: chintbus
    tx_pin: 1
    rx_pin: 3
    baud_rate: 19200
    stop_bits: 1
    data_bits: 8
    debug:
      direction: BOTH          

modbus_server:
  - id: ectosrv
    uart_id: ectobus
    address: 4 # slave address
    re_pin: 4
    de_pin: 18
    holding_registers:
      - start_address: 0 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0x80;    
      - start_address: 1 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0;    
      - start_address: 2 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0x04;    
      - start_address: 3 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0x2201;     
    input_registers:
      - start_address: 10 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0;    
      - start_address: 11 # in this example we map register 200 to a switch
        number: 1
        on_read: |-
          return 0;                                               
modbus:
  id: chitmodbus
  send_wait_time: 2000ms  
  uart_id: chintbus
  flow_control_pin: 22


modbus_controller:
  - id: chint_controller
    address: 0x3   ## address of the ModBUS slave device on the bus
    modbus_id: chitmodbus
    update_interval: 1s
    setup_priority: -10
    command_throttle: 20ms

# sensor:
#  - platform: modbus_controller
#    id: chint_voltage
#    name: "Chint Tensione"
#    address: 0x2000
#    unit_of_measurement: "V" ## for any other unit the value is returned in minutes
#    register_type: holding
#    value_type: FP32
#    accuracy_decimals: 2
#    filters:
#      - multiply: 1

#  - platform: modbus_controller
#    id: chint_current
#    name: "Chint Corrente"
#    address: 0x2002
#    unit_of_measurement: "A" ## for any other unit the value is returned in minutes
#    register_type: read
#    value_type: FP32
#    accuracy_decimals: 2
#    filters:
#      - multiply: 1

#  - platform: modbus_controller
#    id: chint_power
#    name: "Chint Potenza istantanea"
#    address: 0x2004
#    unit_of_measurement: "W" ## for any other unit the value is returned in minutes
#    state_class: "measurement"
#    register_type: read
#    value_type: FP32
#    accuracy_decimals: 2
#    filters:
#      - multiply: 1000

#  - platform: modbus_controller
#    id: chint_frequency
#    name: "Chint Frequenza Rete"
#    address: 0x200E
#    unit_of_measurement: "Hz" ## for any other unit the value is returned in minutes
#    register_type: read
#    value_type: FP32
#    accuracy_decimals: 2
#    filters:
#      - multiply: 1

#  - platform: modbus_controller
#    id: chint_energy_sold
#    name: "Chint Energia ceduta"
#    address: 0x4000
#    unit_of_measurement: "KWh" ## for any other unit the value is returned in minutes
#    state_class: total_increasing
#    device_class: "energy"
#    register_type: read
#    value_type: FP32
#    accuracy_decimals: 2
#    filters:
#      - multiply: 1
 
#  - platform: modbus_controller
#    id: chint_energy_purchased
#    name: "Chint Energia acquistata"
#    address: 0x400A
#    unit_of_measurement: "KWh" ## for any other unit the value is returned in minutes
#    state_class: total_increasing
#    device_class: "energy"
#    register_type: read
#    value_type: FP32
#    accuracy_decimals: 2
#    filters:
#      - multiply: 1   

#  - platform: modbus_controller
#    id: chint_reactive_power
#    name: "Chint Potenza reattiva"
#    address: 0x2004
#    unit_of_measurement: "Var" ## for any other unit the value is returned in minutes
#    register_type: read
#    value_type: FP32
#    accuracy_decimals: 2
#    filters:
#      - multiply: 1000
button:
  - platform: template
    # id: my_button
    name: my
    on_press:
      - lambda: |-
          id(ectosrv).write(0x01);
          id(ectosrv).write(0x46);
          id(ectosrv).write(0x04);
          id(ectosrv).write(0x13);
          id(ectosrv).write(0xa3);
          id(ectosrv).flush();


